syntax = "proto3";

package protos;
option go_package = "./protos";

message Vec3 {
  float x = 1;
  float y = 2;
  float z = 3;
}

message Vec2 {
  float x = 1;
  float y = 2;
}

// 场景信息
message SpaceInfo {
  // 场景id
  string id = 1;
  // 场景类型
  int32 kind = 2;
  // 场景所在的serverID
  string serverID = 3;
}

message SyncPos {
  string id = 1;  // 实体id
  // TODO 这个 label 可以不要了
  string label = 2;  // 实体label，实体的类型
  Vec3 cur = 3;      // 当前位置
  float yaw = 4;     // 绕Y轴旋转的弧度
}

message RspEnter {
  string code = 1;  // code == Space_000 表示 进场景成功，其他表示失败
  string msg = 2;
}
// 实体所在的场景信息
message EntitySpaceInfo {
  // 实体id
  string id = 1;
  // 实体类型
  string label = 2;
  SpaceInfo space = 3;
}

// 多个实体的场景信息
message EntitiesSpaceInfo {
  repeated EntitySpaceInfo infos = 1;
}

// 实体更新信息
message EntityUpdate {
  string id = 1;
  string label = 2;
  // repeated Attr attrs = 3;
  map<string, bytes> attrs = 3;
}

// 实体id和类型，实体销毁或者离开场景时 只用发送这个信息给cellapp
message Entity {
  string id = 1;
  string label = 2;

  int32 reason = 3;
}

// 要销毁的实体列表
message DestroyEntities {
  repeated Entity entities = 1;
}

// 实体移动旋转
message EntityMoveRot {
  string id = 1;
  string label = 2;
  Vec3 pos = 3;
  Vec3 rot = 4;
}

// 实体动作
message EntityAction {
  string id = 1;
  string label = 3;
  int32 actID = 4;
  map<string, string> extends = 5;
}

// // 实体旋转
// message EntityRot {
//   string id = 1;
//   string label = 2;
//   float yaw = 3;
// }

// // 实体移动
// message EntityMove {
//   string id = 1;
//   string label = 2;
//   float x = 3;
//   float y = 4;
//   float z = 5;
// }

// ****************************** 迁移相关 **********************

// MigrateEntityData 迁移的实体源信息
message SEntityData {
  string userID = 1;
  string entityID = 2;
  string entityLabel = 3;

  // 该实体所在的base Server id， 如果为""，表示不在任何base server
  string fromServerID = 4;

  bytes entityDatas = 5;

  string spaceID = 8;   // 实体当前所在的场景 spaceID
  int32 spaceKind = 9;  // 实体当前所在的场景 spaceKind
}

// message EntityMigrateInfo {
//   EntityData data = 1;
//   Vec3 enterPos = 2;
//   Vec3 enterRot = 3;
// }

// 实体的 cell 部分的信息
message EntityCellInfo {
  SEntityData data = 1;
  Vec3 enterPos = 2;
  Vec3 enterRot = 3;
}

// 初始化数据时，同一个场景，进入大量实体
message ManyEntitiesEnterSpaceReq {
  // 静态实体
  repeated EntityCellInfo entities = 1;
  // 动物
  repeated EntityCellInfo animals = 2;

  string enterSpaceID = 3;
  int32 enterSpaceKind = 4;
}

// EnterSpaceReq 请求进入新场景 baseapp -> cellappmgr
message EnterSpaceReq {
  string entityID = 1;
  string entityLabel = 2;
  string fromServerID = 3;

  string spaceID = 4;
  int32 spaceKind = 5;
  Vec3 pos = 6;

  int64 time = 7;
  bool isSend = 8;

  map<string, string> extStrVal = 9;  // 扩展字段，值为 string
  map<string, int32> extIntVal = 10;  // 扩展字段，值为 int32

  int32 viewLayer = 11;  // 进入场景时的视角
}

// RealEnterSpaceReq 请求进入场景返回 cellappmgr -> baseapp
message RealEnterSpaceReq {
  string entityID = 1;
  string entityLabel = 2;
  string spaceServerID = 3;

  string spaceID = 4;
  int32 spaceKind = 5;
  Vec3 enterPos = 6;

  int32 viewLayer = 7;
}

// MigrateToReq 发给 对应的 space app 的消息  baseapp -> cellapp
message MigrateToCellReq {
  EntityCellInfo entityInfo = 1;

  string enterSpaceID = 3;
  int32 enterSpaceKind = 4;

  int32 viewLayer = 5;
}

// 空间创建完成后的通知
message SpaceLoadedNotify {
  string baseServerID = 1;
  string cellServerID = 2;

  string spaceID = 3;
  int32 spaceKind = 4;
}

// 请求创建场景
message CreateBaseSpaceReq {
  // 场景 ID
  string spaceID = 1;
  // 场景类型
  int32 spaceKind = 2;
  // 在哪个 cellapp 上，放置该场景的实体
  string cellServerID = 3;
  // 扩展字段
  map<string, string> extra = 4;
}

message CreateCellSpaceReq {
  // 场景 ID
  string spaceID = 1;
  // 场景类型
  int32 spaceKind = 2;
  // 在哪个 baseapp 上，放置该场景的实体
  string baseServerID = 3;
  // 扩展字段
  map<string, string> extra = 4;
}

message EnterSpaceResultNotify {
  bool ok = 1;
  string errCode = 2;
  string errMsg = 3;

  string spaceID = 4;
  int32 spaceKind = 5;
  string spaceServerID = 6;

  string entityID = 7;
  string entityLabel = 8;
}

// 请求加载城市实体
message LoadRegionEntityReq {
  string regionServerID = 1;
  //请求序号
  int64 seqID = 2;
}

// 应答加载城市实体
message LoadRegionEntityNotify {
  string cellServerID = 1;
  //请求包发过来的序号
  int64 seqID = 2;
  // 0: 不同意加载实体到该cellapp； 1：同意加载到该cellapp
  int32 loadFlag = 3;
}

// 应答: 请求创建场景(若当前baseapp需要的话)
message CreateSpaceIfNeedNotify {
  string baseServerID = 1;
  string cellServerID = 2;

  string spaceID = 3;
  int32 spaceKind = 4;

  // 0: 未创建；1：已创建；2：无需创建
  int32 masterSpaceFlag = 5;
}
